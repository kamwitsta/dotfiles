//---basic-------------------------------------------------------------------------------------------------------

partial default alphanumeric_keys modifier_keys
xkb_symbols "basic" {
	name[Group1]="basic";

	include "pl_lng(common)"

	// Polish
	key <AD03>	{[ e,				E,					eogonek,			Eogonek			]};
	key <AD09>	{[ o,				O,					oacute,				Oacute			]};
	key <AC01>	{[ a,				A,					aogonek,			Aogonek			]};
	key <AC02>	{[ s,				S,					sacute,				Sacute			]};
	// key <AB01>	{[ z,				Z,					U01B6,				U01B5			]};
	key <AB01>	{[ z,				Z,					zabovedot,			Zabovedot		]};
	key <AB02>	{[ x,				X,					zacute,				Zacute			]};
	key <AB03>	{[ c,				C,					cacute,				Cacute			]};
	key <AB06>	{[ n,				N,					nacute,				Nacute			]};

	// other
	key <AB07>	{[ m,				M,					Cyrillic_softsign,	Cyrillic_SOFTSIGN	]};
	key <AD05>	{[ t,				T,					Cyrillic_hardsign,	Cyrillic_HARDSIGN	]};
	key <AD08>	{[ i,				I,					idotless,			Iabovedot		]};
	key <AC05>	{[ g,				G,					gbreve,				Gbreve			]};
};

//---arabic------------------------------------------------------------------------------------------------------

partial alphanumeric_keys modifier_keys
xkb_symbols "arabic" {
	name[Group1]="arabic";

	include "pl_lng(common)"
	key.type[Group1]="EIGHT_LEVEL_ALPHABETIC";

	key <AE01>	{[ 0x1000661,		exclam,				0x1000661,			1,					1,	1	]};
	key <AE02>	{[ 0x1000662,		at,					0x1000662,			2,					2,	2	]};
	key <AE03>	{[ 0x1000663,		numbersign,			0x1000663,			3,					3,	3	]};
	key <AE04>	{[ 0x1000664,		dollar,				0x10006f4,			4,					4,	4	]};
	key <AE05>	{[ 0x1000665,		Arabic_percent,		0x10006f5,			5,					5,	5	]};
	key <AE06>	{[ 0x1000666,		asciicircum,		0x10006f6,			6,					6,	6	]};
	key <AE07>	{[ 0x1000667,		ampersand,			0x1000667,			7,					7,	7	]};
	key <AE08>	{[ 0x1000668,		asterisk,			0x1000668,			8,					8,	8	]};
	key <AE09>	{[ 0x1000669,		parenleft,			0x1000669,			9,					9,	9	]};
	key <AE10>	{[ 0x1000660,		parenright,			0x1000660,			0,					0,	0	]};

	key <AD01>	{[ Arabic_qaf,		Arabic_qaf,			Arabic_qaf,			Arabic_qaf,			q,	Q	]};
	key <AD02>	{[ Arabic_waw,		Arabic_waw,			Arabic_damma,		Arabic_damma,		w,	W	]};
	key <AD03>	{[ Arabic_heh,		Arabic_tehmarbuta,	Arabic_kasra,		Arabic_kasra,		e,	E	]};
	key <AD04>	{[ Arabic_ra,		Arabic_ra,			Arabic_ghain,		Arabic_ghain,		r,	R	]};
	key <AD05>	{[ Arabic_teh,		Arabic_tah,			Arabic_teh,			Arabic_tah,			t,	T	]};
	key <AD06>	{[ 0x10006cc,		Arabic_yeh,			0x10006cc,			Arabic_yeh,			y,	Y	]};
	key <AD07>	{[ Arabic_waw,		Arabic_waw,			Arabic_damma,		Arabic_damma,		u,	U	]};
	key <AD08>	{[ 0x10006cc,		Arabic_yeh,			Arabic_kasra,		Arabic_kasra,		i,	I	]};
	key <AD09>	{[ Arabic_waw,		Arabic_waw,			Arabic_sukun,		Arabic_sukun,		o,	O	]};
	key <AD10>	{[ Arabic_peh,		Arabic_peh,			Arabic_peh,			Arabic_peh,			p,	P	]};

	key <AC01>	{[ Arabic_alef,		Arabic_alef,		Arabic_fatha,		Arabic_fatha,		a,	A	]};
	key <AC02>	{[ Arabic_seen,		Arabic_sad,			Arabic_sheen,		Arabic_shadda,		s,	S	]};
	key <AC03>	{[ Arabic_dal,		Arabic_dad,			Arabic_dal,			Arabic_dad,			d,	D	]};
	key <AC04>	{[ Arabic_feh,		Arabic_feh,			Arabic_feh,			Arabic_feh,			f,	F	]};
	key <AC05>	{[ Arabic_gaf,		Arabic_gaf,			Arabic_gaf,			Arabic_gaf,			g,	G	]};
	key <AC06>	{[ Arabic_hah,		Arabic_heh,			Arabic_hah,			Arabic_heh,			h,	H	]};
	key <AC07>	{[ 0x10006cc,		Arabic_yeh,			Arabic_kasra,		Arabic_kasra,		j,	J	]};
	key <AC08>	{[ Arabic_kaf,		Arabic_kaf,			Arabic_kaf,			Arabic_kaf,			k,	K	]};
	key <AC09>	{[ Arabic_lam,		Arabic_lam,			Arabic_lam,			Arabic_lam,			l,	L	]};
	key <AC10>	{[ Arabic_semicolon,colon,				semicolon,			colon,				semicolon,colon]};
	key <AC11>	{[ Arabic_ain,		quotedbl,			apostrophe,			Arabic_ain,			apostrophe,quotedbl]};

	key <AB01>	{[ Arabic_zain,		Arabic_zah,			Arabic_zain,		Arabic_zah,			z,	Z	]};
	key <AB02>	{[ Arabic_khah,		Arabic_khah,		Arabic_khah,		Arabic_khah,		h,	H	]};
	key <AB03>	{[ Arabic_jeem,		Arabic_jeem,		0x1000686,			0x1000686,			c,	C	]};
	key <AB04>	{[ Arabic_waw,		Arabic_waw,			Arabic_damma,		Arabic_damma,		v,	V	]};
	key <AB05>	{[ Arabic_beh,		Arabic_beh,			Arabic_beh,			Arabic_beh,			b,	B	]};
	key <AB06>	{[ Arabic_noon,		Arabic_noon,		Arabic_noon,		Arabic_noon,		n,	O	]};
	key <AB07>	{[ Arabic_meem,		Arabic_meem,		Arabic_meem,		Arabic_meem,		m,	M	]};
	key <AB08>	{[ Arabic_comma,	less,				comma,				less,				comma,less]};
	key <AB10>	{[ slash,			Arabic_question_mark,	slash,			question,			slash,question]};
};

//---cyrillic----------------------------------------------------------------------------------------------------

partial alphanumeric_keys modifier_keys
xkb_symbols "cyrillic" {
	name[Group1]="cyrillic";

	include "pl_lng(common)"
	key.type[Group1]="EIGHT_LEVEL_ALPHABETIC";

	// key <ADO1>	{[ ]};
	key <AD02>	{[ Cyrillic_ve,		Cyrillic_VE,		Cyrillic_shcha,		Cyrillic_SHCHA,		w,	W	]};
	key <AD03>	{[ Cyrillic_ie,		Cyrillic_IE,		Cyrillic_e,			Cyrillic_E,			e,	E	]};
	key <AD04>	{[ Cyrillic_er,		Cyrillic_ER,		Cyrillic_er,		Cyrillic_ER,		r,	R	]};
	key <AD05>	{[ Cyrillic_te,		Cyrillic_TE,		Cyrillic_hardsign,	Cyrillic_HARDSIGN,	t,	T	]};
	key <AD06>	{[ Cyrillic_yeru,	Cyrillic_YERU,		Cyrillic_yeru,		Cyrillic_YERU,		y,	Y	]};
	key <AD07>	{[ Cyrillic_u,		Cyrillic_U,			Cyrillic_u_straight,Cyrillic_U_straight,u,	U	]};
	key <AD08>	{[ Cyrillic_i,		Cyrillic_I,			Ukrainian_i,		Ukrainian_I,		i,	I	]};
	key <AD09>	{[ Cyrillic_o,		Cyrillic_O,			Cyrillic_io,		Cyrillic_IO,		o,	O	]};
	key <AD10>	{[ Cyrillic_pe,		Cyrillic_PE,		Cyrillic_pe,		Cyrillic_PE,		p,	P	]};

	key <AC01>	{[ Cyrillic_a,		Cyrillic_A,			Cyrillic_ya,		Cyrillic_YA,		a,	A	]};
	key <AC02>	{[ Cyrillic_es,		Cyrillic_ES,		Cyrillic_sha,		Cyrillic_SHA,		s,	S	]};
	key <AC03>	{[ Cyrillic_de,		Cyrillic_DE,		Cyrillic_de,		Cyrillic_DE,		d,	D	]};
	key <AC04>	{[ Cyrillic_ef,		Cyrillic_EF,		Cyrillic_ef,		Cyrillic_EF,		f,	F	]};
	key <AC05>	{[ Cyrillic_ghe,	Cyrillic_GHE,		Cyrillic_ghe,		Cyrillic_GHE,		g,	G	]};
	key <AC06>	{[ Cyrillic_ha,		Cyrillic_HA,		Cyrillic_shha,		Cyrillic_SHHA,		h,	H	]};
	key <AC07>	{[ Cyrillic_shorti,	Cyrillic_SHORTI,	Cyrillic_je,		Cyrillic_JE,		j,	J	]};
	key <AC08>	{[ Cyrillic_ka,		Cyrillic_KA,		Cyrillic_ka,		Cyrillic_KA,		k,	K	]};
	key <AC09>	{[ Cyrillic_el,		Cyrillic_EL,		l,					L,					l,	L	]};
	key <AC11>	{[ apostrophe,		quotedbl,			guillemotleft,		guillemotright,		apostrophe,quotedbl]};

	key <AB01>	{[ Cyrillic_ze,		Cyrillic_ZE,		Cyrillic_zhe,		Cyrillic_ZHE,		z,	Z	]};
	key <AB02>	{[ Cyrillic_ha,		Cyrillic_HA,		Cyrillic_shha,		Cyrillic_SHHA,		x,	X	]};
	key <AB03>	{[ Cyrillic_tse,	Cyrillic_TSE,		Cyrillic_che,		Cyrillic_CHE,		c,	C	]};
	key <AB04>	{[ Cyrillic_ve,		Cyrillic_VE,		Cyrillic_shcha,		Cyrillic_SHCHA,		v,	V	]};
	key <AB05>	{[ Cyrillic_be,		Cyrillic_BE,		Cyrillic_be,		Cyrillic_BE,		b,	B	]};
	key <AB06>	{[ Cyrillic_en,		Cyrillic_EN,		Cyrillic_en,		Cyrillic_EN,		n,	O	]};
	key <AB07>	{[ Cyrillic_em,		Cyrillic_EM,		Cyrillic_softsign,	Cyrillic_SOFTSIGN,	m,	M	]};
};

//---greek-------------------------------------------------------------------------------------------------------

partial alphanumeric_keys modifier_keys
xkb_symbols "greek" {
	name[Group1]="greek";

	include "pl_lng(common)"
	key.type[Group1]="EIGHT_LEVEL_ALPHABETIC";

	// key <AD01>	{[ ]};
	// key <AD02>	{[ ]};
	key <AD03>	{[ Greek_epsilon,	Greek_EPSILON,		Greek_eta,			Greek_ETA,			e,	E	]};
	key <AD04>	{[ Greek_rho,		Greek_RHO,			Greek_rho,			Greek_RHO,			r,	R	]};
	key <AD05>	{[ Greek_tau,		Greek_TAU,			Greek_theta,		Greek_THETA,		t,	T	]};
	key <AD06>	{[ Greek_upsilon,	Greek_UPSILON,		Greek_upsilon,		Greek_UPSILON,		y,	Y	]};
	key <AD07>	{[ Greek_upsilon,	Greek_UPSILON,		Greek_upsilon,		Greek_UPSILON,		u,	U	]};
	key <AD08>	{[ Greek_iota,		Greek_IOTA,			Greek_iota,			Greek_IOTA,			i,	I	]};
	key <AD09>	{[ Greek_omicron,	Greek_OMICRON,		Greek_omega,		Greek_OMEGA,		o,	O	]};
	key <AD10>	{[ Greek_pi,		Greek_PI,			Greek_phi,			Greek_PHI,			p,	P	]};

	key <AC01>	{[ Greek_alpha,		Greek_ALPHA,		Greek_alpha,		Greek_ALPHA,		a,	A	]};
	key <AC02>	{[ Greek_sigma,		Greek_SIGMA,		Greek_finalsmallsigma, Greek_SIGMA,		s,	S	]};
	key <AC03>	{[ Greek_delta,		Greek_DELTA,		Greek_delta,		Greek_DELTA,		d,	D	]};
	key <AC04>	{[ Greek_phi,		Greek_PHI,			Greek_phi,			Greek_PHI,			f,	F	]};
	key <AC05>	{[ Greek_gamma,		Greek_GAMMA,		Greek_gamma,		Greek_GAMMA,		g,	G	]};
	key <AC06>	{[ Greek_chi,		Greek_CHI,			Greek_chi,			Greek_CHI,			h,	H	]};
	key <AC07>	{[ Greek_iota,		Greek_IOTA,			Greek_iota,			Greek_IOTA,			j,	J	]};
	key <AC08>	{[ Greek_kappa,		Greek_KAPPA,		Greek_chi,			Greek_CHI,			k,	K	]};
	key <AC09>	{[ Greek_lamda,		Greek_LAMDA,		Greek_lamda,		Greek_LAMDA,		l,	L	]};

	key <AB01>	{[ Greek_zeta,		Greek_ZETA,			Greek_zeta,			Greek_ZETA,			z,	Z	]};
	key <AB02>	{[ Greek_chi,		Greek_CHI,			Greek_chi,			Greek_CHI,			h,	H	]};
	// key <AB03>	{[ ]};
	// key <AB04>	{[ ]};
	key <AB05>	{[ Greek_beta,		Greek_BETA,			Greek_beta,			Greek_BETA,			b,	B	]};
	key <AB06>	{[ Greek_nu,		Greek_NU,			Greek_nu,			Greek_NU,			n,	O	]};
	key <AB07>	{[ Greek_mu,		Greek_MU,			Greek_mu,			Greek_MU,			m,	M	]};
};

//---hebrew------------------------------------------------------------------------------------------------------

partial alphanumeric_keys modifier_keys
xkb_symbols "hebrew" {
	name[Group1]="hebrew";

	include "pl_lng(common)"
	key.type[Group1]="EIGHT_LEVEL_ALPHABETIC";

	key <AD01>	{[ hebrew_qoph,		hebrew_qoph,		hebrew_qoph,		hebrew_qoph,		q,	Q	]};
	key <AD02>	{[ hebrew_waw,		hebrew_waw,			hebrew_waw,			hebrew_waw,			w,	W	]};
	key <AD03>	{[ hebrew_he,		hebrew_he,			0x10005b5,			0x10005b5,			e,	E	]};
	key <AD04>	{[ hebrew_resh,		hebrew_resh,		hebrew_resh,		hebrew_resh,		r,	R	]};
	key <AD05>	{[ hebrew_taw,		hebrew_tet,			hebrew_taw,			hebrew_tet,			t,	T	]};
	key <AD06>	{[ hebrew_yod,		hebrew_yod,			hebrew_yod,			hebrew_yod,			y,	Y	]};
	key <AD07>	{[ hebrew_waw,		hebrew_waw,			0x10005bc,			0x10005bb,			u,	U	]};
	key <AD08>	{[ hebrew_yod,		hebrew_yod,			0x10005b4,			0x10005b4,			i,	I	]};
	key <AD09>	{[ hebrew_waw,		hebrew_waw,			0x10005b9,			0x10005b8,			o,	O	]};
	key <AD10>	{[ hebrew_pe,		hebrew_finalpe,		hebrew_pe,			hebrew_finalpe,		p,	P	]};

	key <AC01>	{[ hebrew_aleph,	hebrew_aleph,		0x10005b2,			0x10005b3,			a,	A	]};
	key <AC02>	{[ hebrew_samech,	hebrew_samech,		hebrew_shin,		hebrew_shin,		s,	S	]};
	key <AC03>	{[ hebrew_dalet,	hebrew_dalet,		hebrew_dalet,		hebrew_dalet,		d,	D	]};
	key <AC04>	{[ hebrew_pe,		hebrew_finalpe,		hebrew_pe,			hebrew_finalpe,		f,	F	]};
	key <AC05>	{[ hebrew_gimel,	hebrew_gimel,		hebrew_gimel,		hebrew_gimel,		g,	G	]};
	key <AC06>	{[ hebrew_chet,		hebrew_chet,		hebrew_chet,		hebrew_chet,		h,	H	]};
	key <AC07>	{[ hebrew_yod,		hebrew_yod,			hebrew_yod,			hebrew_yod,			j,	J	]};
	key <AC08>	{[ hebrew_kaph,		hebrew_finalkaph,	hebrew_kaph,		hebrew_finalkaph,	k,	K	]};
	key <AC09>	{[ hebrew_lamed,	hebrew_lamed,		hebrew_lamed,		hebrew_lamed,		l,	L	]};
	key <AC11>	{[ hebrew_ayin,		hebrew_ayin,		hebrew_ayin,		hebrew_ayin,		apostrophe,quotedbl]};

	key <AB01>	{[ hebrew_zain,		hebrew_zain,		hebrew_zain,		hebrew_zain,		z,	Z	]};
	key <AB02>	{[ hebrew_chet,		hebrew_chet,		hebrew_chet,		hebrew_chet,		h,	H	]};
	key <AB03>	{[ hebrew_zade,		hebrew_finalzade,	hebrew_zade,		hebrew_finalzade,	c,	C	]};
	key <AB04>	{[ hebrew_waw,		hebrew_waw,			hebrew_waw,			hebrew_waw,			v,	V	]};
	key <AB05>	{[ hebrew_bet,		hebrew_bet,			hebrew_bet,			hebrew_bet,			b,	B	]};
	key <AB06>	{[ hebrew_nun,		hebrew_finalnun,	hebrew_nun,			hebrew_finalnun,	n,	O	]};
	key <AB07>	{[ hebrew_mem,		hebrew_finalmem,	hebrew_mem,			hebrew_finalmem,	m,	M	]};
};

//---common------------------------------------------------------------------------------------------------------

partial alphanumeric_keys modifier_keys
xkb_symbols "common"{
	include "latin"

	key.type[Group1]="FOUR_LEVEL";

	// dead keys
	key <TLDE>	{[ grave,			asciitilde,			dead_tilde,			dead_tilde			]};
	key <AE02>	{[ 2,				at,					dead_abovering,		dead_abovedot		]};
	key <AE04>	{[ 4,				dollar,				EuroSign,			currency			]};
	key <AE06>	{[ 6,				asciicircum,		dead_circumflex,	dead_circumflex		]};
	key <AE09>	{[ 9,				parenleft,			U032F,				U032F				]};
	key <AE10>	{[ 0,				parenright,			dead_breve,			dead_breve			]};
	key <AE11>	{[ minus,			underscore,			dead_macron,		dead_macron			]};
	Key <BKSL>	{[ backslash,		bar,				dead_grave,			dead_grave			]};
	key <AC10>	{[ semicolon,		colon,				dead_diaeresis,		dead_diaeresis		]};
	key <AC11>	{[ apostrophe,		quotedbl,			dead_doubleacute,	dead_doubleacute	]};
	key <AB08>	{[ comma,			less,				dead_cedilla,		dead_hook			]};
	key <AB09>	{[ period,			greater,			dead_caron,			dead_belowdot		]};
	key <AB10>	{[ slash,			question,			dead_acute,			dead_horn			]};

	// some extra stuff
	key <SPCE>	{[ space,			space,				nobreakspace,		nobreakspace		]};
	key <AE12>	{[ equal,			plus,				endash,				emdash				]};

	key.type[Group1]="TWO_LEVEL";

	// shift-backspace = delete
	key <BKSP> {[ BackSpace,	Delete	]};

	// keypad home, end &c. working with shift
	key <KP1>	{[ End,			End		]};
	key <KP2>	{[ Down,		Down	]};
	key <KP3>	{[ Next,		Next	]};
	key <KP4>	{[ Left,		Left	]};
	key <KP5>	{[ Begin,		Begin	]};
	key <KP6>	{[ Right,		Right	]};
	key <KP7>	{[ Home,		Home	]};
	key <KP8>	{[ Up,			Up		]};
	key <KP9>	{[ Prior,		Prior	]};

	key.type[Group1]="ONE_LEVEL";

	// begone, foul caps
	// key <CAPS>	{[ Ctrl_L			]};
	// modifier_map Shift	 { <CAPS> };

	// lwin - lalt - lctl, with ctrl working in non-latin; lalt still doesn't
	key <LCTL>	{[ Super_L			]};
	key <LWIN>	{[ Alt_L			]};
	key <LALT>	{[ ISO_Level5_Shift	]};
	modifier_map Mod1	 { <LWIN> };
	modifier_map Control { <LALT> };

	// begone foul caps + rctrl compose + ralt switch dead &c.
	include "capslock(ctrl_modifier)"
	include "compose(rctrl)"
	include "level3(ralt_switch)"
};
